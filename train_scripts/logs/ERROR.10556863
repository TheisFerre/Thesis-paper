INFO:__main__:/zhome/2b/7/117471/Thesis/data/processed/metalearning/GM2017-july-sep-GRID.pkl
INFO:__main__:/zhome/2b/7/117471/Thesis/data/processed/metalearning/yellow-taxi2020-nov-REGION.pkl
INFO:__main__:/zhome/2b/7/117471/Thesis/data/processed/metalearning/citibike-tripdata-REGION.pkl
INFO:__main__:/zhome/2b/7/117471/Thesis/data/processed/metalearning/LYFT2014-july-sep-GRID.pkl
INFO:__main__:/zhome/2b/7/117471/Thesis/data/processed/metalearning/UBER2015-jan-june-GRID.pkl
INFO:__main__:/zhome/2b/7/117471/Thesis/data/processed/metalearning/T-Drive-taxi-pickups-GRID.pkl
INFO:__main__:/zhome/2b/7/117471/Thesis/data/processed/metalearning/GM2017-july-sep-REGION.pkl
INFO:__main__:/zhome/2b/7/117471/Thesis/data/processed/metalearning/UBER2015-jan-june-REGION.pkl
INFO:__main__:/zhome/2b/7/117471/Thesis/data/processed/metalearning/green-taxi2020-dec-GRID.pkl
INFO:__main__:/zhome/2b/7/117471/Thesis/data/processed/metalearning/citibike-tripdata-GRID.pkl
INFO:__main__:/zhome/2b/7/117471/Thesis/data/processed/metalearning/yellow-taxi2020-nov-GRID.pkl
INFO:__main__:/zhome/2b/7/117471/Thesis/data/processed/metalearning/green-taxi2020-dec-REGION.pkl
INFO:__main__:/zhome/2b/7/117471/Thesis/data/processed/metalearning/citibike2014-tripdata-GRID.pkl
INFO:__main__:/zhome/2b/7/117471/Thesis/data/processed/metalearning/citibike2014-tripdata-REGION.pkl
INFO:__main__:{'GM2017-july-sep-GRID': <torch_geometric.data.dataloader.DataLoader object at 0x7efef69f3eb0>, 'yellow-taxi2020-nov-REGION': <torch_geometric.data.dataloader.DataLoader object at 0x7efef69ff940>, 'citibike-tripdata-REGION': <torch_geometric.data.dataloader.DataLoader object at 0x7efef6842c40>, 'LYFT2014-july-sep-GRID': <torch_geometric.data.dataloader.DataLoader object at 0x7efef70411f0>, 'UBER2015-jan-june-GRID': <torch_geometric.data.dataloader.DataLoader object at 0x7efef69f3cd0>, 'T-Drive-taxi-pickups-GRID': <torch_geometric.data.dataloader.DataLoader object at 0x7efef61345e0>, 'GM2017-july-sep-REGION': <torch_geometric.data.dataloader.DataLoader object at 0x7efef5bd23d0>, 'UBER2015-jan-june-REGION': <torch_geometric.data.dataloader.DataLoader object at 0x7efef5d33490>, 'green-taxi2020-dec-GRID': <torch_geometric.data.dataloader.DataLoader object at 0x7efef5d52160>, 'citibike-tripdata-GRID': <torch_geometric.data.dataloader.DataLoader object at 0x7efef5b821f0>, 'yellow-taxi2020-nov-GRID': <torch_geometric.data.dataloader.DataLoader object at 0x7efef44e07c0>, 'green-taxi2020-dec-REGION': <torch_geometric.data.dataloader.DataLoader object at 0x7efef46acfa0>, 'citibike2014-tripdata-GRID': <torch_geometric.data.dataloader.DataLoader object at 0x7efef44eb490>, 'citibike2014-tripdata-REGION': <torch_geometric.data.dataloader.DataLoader object at 0x7efef446f970>}
INFO:__main__:Fitting model at time: 2021-10-04 13:07:46.247341
UserWarning: The .grad attribute of a Tensor that is not a leaf Tensor is being accessed. Its .grad attribute won't be populated during autograd.backward(). If you indeed want the gradient for a non-leaf Tensor, use .retain_grad() on the non-leaf Tensor. If you access the non-leaf Tensor by mistake, make sure you access the leaf Tensor instead. See github.com/pytorch/pytorch/pull/30531 for more information.
Traceback (most recent call last):
  File "/zhome/2b/7/117471/Thesis/src/models/train_meta.py", line 172, in <module>
    model = train_model(
  File "/zhome/2b/7/117471/Thesis/src/models/train_meta.py", line 84, in train_model
    learner.adapt(support_loss)
  File "/zhome/2b/7/117471/Thesis/venv-thesis/lib/python3.8/site-packages/learn2learn/algorithms/maml.py", line 159, in adapt
    gradients = grad(loss,
  File "/zhome/2b/7/117471/Thesis/venv-thesis/lib/python3.8/site-packages/torch/autograd/__init__.py", line 226, in grad
    return Variable._execution_engine.run_backward(
KeyboardInterrupt
