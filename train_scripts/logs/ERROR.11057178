INFO:__main__:/zhome/2b/7/117471/Thesis/data/processed/ablation-augmented/TLC2018-FHV-aug-HOUR4-REGION.pkl
INFO:__main__:/zhome/2b/7/117471/Thesis/data/processed/ablation-augmented/TLC2018-FHV-aug-HOUR4-GRID10.pkl
INFO:__main__:/zhome/2b/7/117471/Thesis/data/processed/ablation-augmented/yellow-taxi2020-nov-HOUR4-REGION.pkl
INFO:__main__:/zhome/2b/7/117471/Thesis/data/processed/ablation-augmented/yellow-taxi2020-nov-HOUR8-GRID5.pkl
INFO:__main__:/zhome/2b/7/117471/Thesis/data/processed/ablation-augmented/TLC2018-FHV-aug-HOUR8-GRID5.pkl
INFO:__main__:/zhome/2b/7/117471/Thesis/data/processed/ablation-augmented/TLC2018-FHV-aug-HOUR1-REGION.pkl
INFO:__main__:/zhome/2b/7/117471/Thesis/data/processed/ablation-augmented/yellow-taxi2020-nov-HOUR8-GRID10.pkl
INFO:__main__:/zhome/2b/7/117471/Thesis/data/processed/ablation-augmented/yellow-taxi2020-nov-HOUR1-GRID5.pkl
INFO:__main__:/zhome/2b/7/117471/Thesis/data/processed/ablation-augmented/TLC2018-FHV-aug-HOUR1-GRID5.pkl
INFO:__main__:/zhome/2b/7/117471/Thesis/data/processed/ablation-augmented/yellow-taxi2020-nov-HOUR1-REGION.pkl
INFO:__main__:/zhome/2b/7/117471/Thesis/data/processed/ablation-augmented/yellow-taxi2020-nov-HOUR4-GRID10.pkl
INFO:__main__:/zhome/2b/7/117471/Thesis/data/processed/ablation-augmented/TLC2018-FHV-aug-HOUR8-REGION.pkl
INFO:__main__:/zhome/2b/7/117471/Thesis/data/processed/ablation-augmented/TLC2018-FHV-aug-HOUR8-GRID10.pkl
INFO:__main__:/zhome/2b/7/117471/Thesis/data/processed/ablation-augmented/TLC2018-FHV-aug-HOUR1-GRID10.pkl
INFO:__main__:/zhome/2b/7/117471/Thesis/data/processed/ablation-augmented/TLC2018-FHV-aug-HOUR4-GRID5.pkl
INFO:__main__:/zhome/2b/7/117471/Thesis/data/processed/ablation-augmented/yellow-taxi2020-nov-HOUR8-REGION.pkl
INFO:__main__:/zhome/2b/7/117471/Thesis/data/processed/ablation-augmented/yellow-taxi2020-nov-HOUR4-GRID5.pkl
INFO:__main__:/zhome/2b/7/117471/Thesis/data/processed/ablation-augmented/yellow-taxi2020-nov-HOUR1-GRID10.pkl
INFO:__main__:{'TLC2018-FHV-aug-HOUR4-REGION': <torch_geometric.data.dataloader.DataLoader object at 0x7fb846ac3b20>, 'TLC2018-FHV-aug-HOUR4-GRID10': <torch_geometric.data.dataloader.DataLoader object at 0x7fb846fc4ee0>, 'yellow-taxi2020-nov-HOUR4-REGION': <torch_geometric.data.dataloader.DataLoader object at 0x7fb846a8dc10>, 'yellow-taxi2020-nov-HOUR8-GRID5': <torch_geometric.data.dataloader.DataLoader object at 0x7fb846a8da60>, 'TLC2018-FHV-aug-HOUR8-GRID5': <torch_geometric.data.dataloader.DataLoader object at 0x7fb846a2be50>, 'TLC2018-FHV-aug-HOUR1-REGION': <torch_geometric.data.dataloader.DataLoader object at 0x7fb846a62100>, 'yellow-taxi2020-nov-HOUR8-GRID10': <torch_geometric.data.dataloader.DataLoader object at 0x7fb8469e6250>, 'yellow-taxi2020-nov-HOUR1-GRID5': <torch_geometric.data.dataloader.DataLoader object at 0x7fb8469f5430>, 'TLC2018-FHV-aug-HOUR1-GRID5': <torch_geometric.data.dataloader.DataLoader object at 0x7fb846993220>, 'yellow-taxi2020-nov-HOUR1-REGION': <torch_geometric.data.dataloader.DataLoader object at 0x7fb84699b370>, 'yellow-taxi2020-nov-HOUR4-GRID10': <torch_geometric.data.dataloader.DataLoader object at 0x7fb8471112b0>, 'TLC2018-FHV-aug-HOUR8-REGION': <torch_geometric.data.dataloader.DataLoader object at 0x7fb846ac30a0>, 'TLC2018-FHV-aug-HOUR8-GRID10': <torch_geometric.data.dataloader.DataLoader object at 0x7fb8463a00d0>, 'TLC2018-FHV-aug-HOUR1-GRID10': <torch_geometric.data.dataloader.DataLoader object at 0x7fb84633c340>, 'TLC2018-FHV-aug-HOUR4-GRID5': <torch_geometric.data.dataloader.DataLoader object at 0x7fb846353520>, 'yellow-taxi2020-nov-HOUR8-REGION': <torch_geometric.data.dataloader.DataLoader object at 0x7fb846358700>, 'yellow-taxi2020-nov-HOUR4-GRID5': <torch_geometric.data.dataloader.DataLoader object at 0x7fb8462ee4f0>, 'yellow-taxi2020-nov-HOUR1-GRID10': <torch_geometric.data.dataloader.DataLoader object at 0x7fb84628d880>}
INFO:__main__:Fitting model at time: 2021-11-17 15:57:34.718679
UserWarning: The .grad attribute of a Tensor that is not a leaf Tensor is being accessed. Its .grad attribute won't be populated during autograd.backward(). If you indeed want the gradient for a non-leaf Tensor, use .retain_grad() on the non-leaf Tensor. If you access the non-leaf Tensor by mistake, make sure you access the leaf Tensor instead. See github.com/pytorch/pytorch/pull/30531 for more information.
UserWarning: torch.nn.utils.clip_grad_norm is now deprecated in favor of torch.nn.utils.clip_grad_norm_.
